#!/bin/sh
#
# Script to build the published winetest.exe on winehq.org.
# This should normally be run from a cron job.
#
# Copyright 2008 Alexandre Julliard
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#

set -e

usage()
{
    echo "Usage: $0 [options]"
    echo ""
    echo "Options:"
    echo "  -h, --help     Display this message"
    echo "  -f, --force    Force rebuild even if up-to-date"
    echo ""
}

force=0

while [ $# -gt 0 ]
do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -f|--force)
            force=1
            shift
            ;;
        *)
            echo "Unknown option $1"
            usage
            exit 1
            ;;
  esac
done

destdir="/home/winehq/opt/winetest/builds"
desturl="http://test.winehq.org/builds"
servicedir="/home/winehq/opt/winetest/winehq-builds/winetest"
toolsdir="/home/winehq/opt/git-tools"
transldir="/home/winehq/opt/source/transl"

mingw32=i586-mingw32msvc
mingw64=x86_64-pc-mingw32
logfile=LOG

# if the log file exists, either a build is in progress or one has failed
if [ -f $logfile -a $force -eq 0 ]
then
    exit 1
fi

umask 022

(
    (cd wine && git pull) || exit
    head=$(cd wine && git rev-parse --short=12 HEAD) || exit

    if [ -f $destdir/winetest-$head.exe -a -f $destdir/winetest64-$head.exe -a $force -eq 0 ]
    then
        exit 0
    fi

    # first build the native tools

    test -d build-native ||
    (mkdir build-native &&
     cd build-native &&
     ../wine/configure --enable-win64 --without-x --without-freetype) || exit

    (cd build-native && make depend && make tools) || exit

    # then cross-compile the tests

    test -d build-mingw ||
    (mkdir build-mingw &&
     cd build-mingw &&
     ../wine/configure --host=$mingw32 --with-wine-tools=../build-native --without-x --without-freetype) || exit

    (cd build-mingw &&
     make depend &&
     make include &&
     make -C dlls testsubdirs &&
     cd programs/winetest &&
     $mingw32-gcc -v 2> build.nfo &&
     make dist) || exit

    # install everything

    chmod 644 build-mingw/programs/winetest/winetest-dist.exe
    mv -f build-mingw/programs/winetest/winetest-dist.exe $destdir/winetest-$head.exe
    ln -sf winetest-$head.exe $destdir/winetest-latest.exe
    rm -f $servicedir/*.cookie $servicedir/*.url
    sha1sum $destdir/winetest-latest.exe | cut -c1-40 > $servicedir/winetest-$head.cookie
    echo "$desturl/winetest-$head.exe" > $servicedir/winetest-$head.url

    echo "winetest-$head.exe built successfully."

    # now the same thing for 64-bit

    test -d build-mingw64 ||
    (mkdir build-mingw64 &&
     cd build-mingw64 &&
     ../wine/configure --host=$mingw64 --with-wine-tools=../build-native --without-x --without-freetype) || exit

    (cd build-mingw64 &&
     make depend &&
     make include &&
     make -C dlls testsubdirs &&
     cd programs/winetest &&
     $mingw64-gcc -v 2> build.nfo &&
     make dist) || exit

    chmod 644 build-mingw64/programs/winetest/winetest-dist.exe
    mv -f build-mingw64/programs/winetest/winetest-dist.exe $destdir/winetest64-$head.exe
    ln -sf winetest64-$head.exe $destdir/winetest64-latest.exe

    echo "winetest64-$head.exe built successfully."

    # update the translations status

    rm -rf work
    mkdir work work/langs work/dumps work/dumps/res work/new-langs
    $toolsdir/transl/scripts/checkmakefile.pl -S ./wine -T ./build-mingw -t ./build-native -w ./work -s "$toolsdir/transl/scripts"
    $toolsdir/transl/scripts/summary.pl ./work "$toolsdir/transl/scripts"
    for i in work/new-langs/*
    do
        if [ -f "$i" ]
        then
            echo "note: New language:" `basename "$i"` | tee -a work/run.log
        fi
    done
    mv -f $transldir/langs $transldir/langs.old
    mv -f $transldir/dumps $transldir/dumps.old
    mv -f work/langs $transldir/langs
    mv -f work/dumps $transldir/dumps
    mv -f work/run.log $transldir/dumps/run.log
    rm -rf $transldir/langs.old $transldir/dumps.old

) >$logfile 2>&1 && rm -f $logfile

# if the log file is still here, something failed
if [ -f $logfile ]
then
    cat $logfile
    exit 1
fi
