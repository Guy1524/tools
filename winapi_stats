#!/usr/bin/perl
#
# Filter to generate the winapi stats table using winapi_extract.
# Must be run from the Wine top-level source directory.
#

my %stats;

open STATS, "-|" or exec "./tools/winapi/winapi_extract", "--pseudo-stub-statistics", "--no-verbose", "--no-progress" or die "cannot run winapi_extract";
while (<STATS>)
{
    chomp;
    if (/\*\.c: (.*): (\d+) of (\d+) functions are stubs \((\d+) real, (\d+) pseudo\) and (\d+) are forwards/)
    {
        my ($dll, $stubs, $total, $real, $pseudo, $forwards) = ($1, $2, $3, $4, $5, $6);
        next if $dll =~ /^(wine.*\.drv|wine.*\.acm|wined3d|winedos|wprocs)$/;
        $stats{$dll} = [ $stubs, $total, $real, $pseudo, $forwards ];
        ${$stats{" Total"}}[0] += $stubs;
        ${$stats{" Total"}}[1] += $total;
        ${$stats{" Total"}}[2] += $real;
        ${$stats{" Total"}}[3] += $pseudo;
        ${$stats{" Total"}}[4] += $forwards;
    }
}
close STATS;

my $bg = 0;

print "<!--TITLE:[Win API Stats]-->\n\n";
print "<h3>Win API Stats</h3>\n\n";
print "<table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"3\">\n\n";
print "<tr class=\"hdr\">\n";
print "<th>Library</th>\n";
print "<th>API count</th>\n";
print "<th>% implemented</th>\n";
print "<th>Total stubs</th>\n";
print "<th>Real stubs</th>\n";
print "<th>Pseudo stubs</th>\n";
print "<th>Forwards</th>\n";
print "</tr>\n";

foreach my $dll (sort keys %stats)
{
    my ($stubs, $total, $real, $pseudo, $forwards) = @{$stats{$dll}};
    my $color = $bg ? "white" : "grey";
    my $pct = $total ? ($total - $stubs) / $total * 100 : 0;
    printf "<tr>\n";
    printf "<td class=\"%s\">%s</td>\n", $color, $dll;
    printf "<td class=\"%s\">%u</td>\n", $color, $total;
    printf "<td class=\"pct%u\">%u%%</td>\n", int(($pct + 2.5) / 5) * 5, $pct;
    printf "<td class=\"%s\">%u</td>\n", $color, $stubs;
    printf "<td class=\"%s\">%u</td>\n", $color, $real;
    printf "<td class=\"%s\">%u</td>\n", $color, $pseudo;
    printf "<td class=\"%s\">%u</td>\n", $color, $forwards;
    printf "</tr>\n";
    $bg = !$bg;
}

my $now = `date`;
chomp $now;
print "\n</table>\n</div>\n";
print "<p>last modified: $now</p>\n";
